//=============================================================================
//调用函数说明:
//   发送文字到主程序控制台上:
//     procedure MainOutMessasge(sMsg:String;nMode:integer)
//     sMsg 为要发送的文本内容
//     nMode 为发送模式，0为立即在控制台上显示，1为加入显示队列，稍后显示
//
//=============================================================================

//脚本第一行内容是 ;+++++++---------- 表示是加密脚本，M2会调用插件进行解密
unit PlugMain;

interface
uses
  EngineType;
procedure InitPlug();
procedure UnInitPlug();
function DeCodeText(sText: _STRING): _STRING;
implementation
uses Module, PlugShare;
//=============================================================================
//游戏文本配置信息解码函数(一般用于加解密脚本)
//参数：sText 为要解码的字符串
//返回值：返回解码后的字符串(返回的字符串长度不能超过2048字节，超过将引起错误)
//=============================================================================

function DeCodeText(sText: _STRING): _STRING;
begin
  Result := sText;
  //Result:='返回值：返回解码后的字符串';
end;


//=============================================================================
//加载插件模块时调用的初始化函数
//参数：Apphandle 为主程序句柄
//=============================================================================

procedure InitPlug();
begin
  MainOutMessasge(sStartLoadPlug, 0);
end;
//=============================================================================
//退出插件模块时调用的结束函数
//=============================================================================

procedure UnInitPlug();
begin
  {
    写上相应处理代码;
  }
  MainOutMessasge(sUnLoadPlug, 0);
end;



end.

